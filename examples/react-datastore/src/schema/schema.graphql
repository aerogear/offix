## NOTE: This schema was generated by Graphback and should not be changed manually

input BooleanInput {
  ne: Boolean
  eq: Boolean
}

input CreateTodoInput {
  id: ID
  title: String
  description: String
  completed: Boolean
}

input IDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  in: [ID!]
}

input MutateTodoInput {
  id: ID!
  title: String
  description: String
  completed: Boolean
}

type Mutation {
  createTodo(input: CreateTodoInput!): Todo
  updateTodo(input: MutateTodoInput!): Todo
  deleteTodo(input: MutateTodoInput!): Todo
}

input OrderByInput {
  field: String!
  order: SortDirectionEnum = ASC
}

input PageRequest {
  limit: Int
  offset: Int
}

type Query {
  getTodo(id: ID!): Todo
  findTodos(filter: TodoFilter, page: PageRequest, orderBy: OrderByInput): TodoResultList!
}

enum SortDirectionEnum {
  DESC
  ASC
}

input StringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  in: [String!]
  contains: String
  startsWith: String
  endsWith: String
}

type Subscription {
  newTodo(filter: TodoSubscriptionFilter): Todo!
  updatedTodo(filter: TodoSubscriptionFilter): Todo!
  deletedTodo(filter: TodoSubscriptionFilter): Todo!
}

"""
@model
@datasync-client
"""
type Todo {
  id: ID!
  title: String
  description: String
  completed: Boolean
}

input TodoFilter {
  id: IDInput
  title: StringInput
  description: StringInput
  completed: BooleanInput
  and: [TodoFilter!]
  or: [TodoFilter!]
  not: TodoFilter
}

type TodoResultList {
  items: [Todo]!
  offset: Int
  limit: Int
  count: Int
}

input TodoSubscriptionFilter {
  id: ID
  title: String
  description: String
  completed: Boolean
}