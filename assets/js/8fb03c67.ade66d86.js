(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{116:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(n),b=r,f=d["".concat(o,".").concat(b)]||d[b]||u[b]||i;return n?a.a.createElement(f,l(l({ref:t},s),{},{components:n})):a.a.createElement(f,l({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=b;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},97:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),i=(n(0),n(116)),o={id:"replication",title:"Replication",sidebar_label:"Replication"},l={unversionedId:"replication",id:"version-datastore-0.5.0/replication",isDocsHomePage:!1,title:"Replication",description:"Offix DataStore replication requires a manual start. This makes it possible to",source:"@site/versioned_docs/version-datastore-0.5.0/replication.md",slug:"/replication",permalink:"/docs/replication",editUrl:"https://github.com/aerogear/offix/edit/master/website/versioned_docs/version-datastore-0.5.0/replication.md",version:"datastore-0.5.0",sidebar_label:"Replication",sidebar:"version-datastore-0.5.0/docs",previous:{title:"Subscribing to Changes",permalink:"/docs/subscriptions"},next:{title:"React - using Datastore Hooks",permalink:"/docs/react"}},c=[{value:"Global initiation",id:"global-initiation",children:[]},{value:"Model-based Initiation",id:"model-based-initiation",children:[]}],s={toc:c};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Offix DataStore replication requires a manual start. This makes it possible to\nbind filters at a later stage. An example of this would be to filter ",Object(i.b)("inlineCode",{parentName:"p"},"Todo")," items\nbased on the user id of a signed in user. The datastore allows replication to be started\nglobally for all models or model by model."),Object(i.b)("h2",{id:"global-initiation"},"Global initiation"),Object(i.b)("p",null,"Once the ",Object(i.b)("inlineCode",{parentName:"p"},"DataStore")," has been initialised, you can call the start replication\nmethod:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-typescript"},"\ndatastore.startReplication()\n\n")),Object(i.b)("h2",{id:"model-based-initiation"},"Model-based Initiation"),Object(i.b)("p",null,"Alternatively, replication can be started one model at a time. The model's\n",Object(i.b)("inlineCode",{parentName:"p"},"startReplication")," method also accepts an optional ",Object(i.b)("inlineCode",{parentName:"p"},"filter")," parameter:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-typescript"},"\nconst filter = {\n  userId: { eq: user._id }\n};\nTodoModel.startReplication(filter)\n\n")))}p.isMDXComponent=!0}}]);