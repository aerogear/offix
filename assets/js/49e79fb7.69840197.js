(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{148:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return b}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(r),d=n,b=p["".concat(i,".").concat(d)]||p[d]||f[d]||o;return r?a.a.createElement(b,c(c({ref:t},l),{},{components:r})):a.a.createElement(b,c({ref:t},l))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},98:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return s})),r.d(t,"default",(function(){return u}));var n=r(3),a=r(7),o=(r(0),r(148)),i={id:"introduction",title:"Introduction to Offix Datastore",sidebar_label:"Offix Datastore"},c={unversionedId:"introduction",id:"version-0.5.0/introduction",isDocsHomePage:!1,title:"Introduction to Offix Datastore",description:"Offix Datastore is a fully capable client side store for",source:"@site/versioned_docs/version-0.5.0/introduction.md",slug:"/introduction",permalink:"/docs/introduction",editUrl:"https://github.com/aerogear/offix/edit/master/website/versioned_docs/version-0.5.0/introduction.md",version:"0.5.0",sidebar_label:"Offix Datastore",sidebar:"version-0.5.0/docs",next:{title:"Getting Started",permalink:"/docs/getting-started"}},s=[{value:"Key Features",id:"key-features",children:[]}],l={toc:s};function u(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Offix Datastore is a fully capable client side store for\nJavaScript apps with real-time synchronization over GraphQL.\nOffix Datastore saves all your data locally and enables a GraphQL replication mechanism to your generic GraphQL server,\nthis way, your data is available with or without an internet connection.\nAll changes made locally, when offline, are queued until an internet connection is available."),Object(o.b)("h3",{id:"key-features"},"Key Features"),Object(o.b)("h4",{id:"offline-first"},"Offline-first"),Object(o.b)("p",null,'Offix Datastore allows you to build "Offline-first" apps with ease.\nUser data is always available locally and the local database is\nsynchronized with server as soon as the user is online.'),Object(o.b)("h4",{id:"graphql-crud-compatible"},"GraphQL CRUD compatible"),Object(o.b)("p",null,"Offix Datastore supports synchronization with ",Object(o.b)("a",{parentName:"p",href:"https://graphqlcrud.org/"},"GraphQL CRUD")," compatible servers by default.\nIf your server doesn't support GraphQLCrud, you can build your own synchronization engine."),Object(o.b)("h4",{id:"browser-and-mobile-support"},"Browser and mobile support"),Object(o.b)("p",null,"Offix Datastore works on all devices so you can build seamless offline experiences on any device.\nIn the browser, Offix Datastore uses IndexedDB or WebSQL to persist data locally.\nOn mobile, Offix Datastore uses SQLite."),Object(o.b)("h4",{id:"react-support"},"React Support"),Object(o.b)("p",null,"Offix Datastore provides hooks to help React devs build offline apps quickly. See ",Object(o.b)("a",{parentName:"p",href:"/docs/react"},"React docs")," and ",Object(o.b)("a",{parentName:"p",href:"/docs/react-native"},"React Native"),"."))}u.isMDXComponent=!0}}]);